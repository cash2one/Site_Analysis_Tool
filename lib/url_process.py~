#!/usr/bin/env python     
# -*- coding: utf-8 -*-   
# Copyright (c) 2013 zhangguhua <zhangguhua@baidu.com> 

import os

def get_real_url(url, host):
    """
    """
    sorce_list = ['3GP', '7Z', 'AAC',' ACE', 'AIF', 'ARJ', 'ASF', 'AVI', 'BIN', 'BZ2', 'EXE', 'GZ', 'GZIP', 'IMG', 'ISO', 'LZH', 'M4A', 'M4V', 'MKV', 'MOV', 'MP3', 'MP4', 'MPA', 'MPE', 'MPEG', 'MPG', 'MSI', 'MSU', 'OGG', 'OGV', 'PDF', 'PLJ', 'PPS', 'PPT', 'QT', 'RAR', 'RM', 'RMVB', 'SEA', 'SIT', 'SITX', 'TAR', 'TIF', 'TIFF', 'WAV', 'WMA', 'WMV', 'ZIP', 'PPT', 'TXT', 'PPTX', 'DOC', 'DOCX', 'JPG', 'JPEG', 'BMP', 'PNG', 'GIF', 'XLS', 'XLSX' ]

    url = url.rstrip('/')
    items = url.split('#')
    url = items[0]

    if "javascript:" in url or "mailto:" in url or "tel:" in url:
        return None
    items = url.split('.')
    if items[-1].upper() in sorce_list:
        return None

        
    if (url.startswith("http://")) or (url.startswith('https://')):
        return url
    elif(url.startswith("ftp://")):
        return url
    elif(url.startswith('//')):
        return "http:"+ url
    elif(url.startswith('/')):
        return 'http://' + host + url
    else:
        return  'http://' + host + '/' + url



def get_entrance_and_link(links):
    """
    entrance_link 代表页面的全连接，以http://开头
    link 是用户输入的链接去掉http://
    """
    if links.startswith("http://"):
        link = links
        entrance_link = links.lstrip("http://")
    else:
        entrance_link = links
        link = "http://" + links

    return entrance_link, link
        
def is_in_the_host(url, host):
    if url is None:
        return False
    if url.startswith("http://"):
        url = url[7:]
    if url.startswith("https://"):
        url = url[8:]
    host = host.lstrip('www.')
        
    items1 = host.split('.')
    
    items2 = url.split('/')

    if is_a_ip_addresss(host):
        if host == items2[0]:
            return True
        else:
            return False
    items3 = items2[0].split('.')
    if len(items3) < 2:
        return False
    if host.endswith('com.cn') and len(items3) >=3:
        if items3[-3] == items1[-3]:
            return True
        else:
            return False
    else:
        if items2[0].endswith(host):
            return True
        else:
            return False


def is_a_ip_addresss(str):
    items = str.split('.')
    if len(items) != 4:
        return False
    try:
        for item in items:
            if int(item) >=0 and items <= 257:
                continue
            else:
                return False
    except:
        return False
    
def get_the_host(url):
    if url.startswith("http://"):
        url = url[7:]
    if url.startswith("https://"):
        url = url[8:]
    items = url.split('/')
    host = items[0].lstrip('www.')
    return host




